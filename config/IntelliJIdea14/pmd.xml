<?xml version="1.0"?>
<!--
  ~ Copyright (C) 2012-2021, TomTom (http://tomtom.com).
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<ruleset name="Java Coding Rules for Project SpeedTools"
         xmlns="http://pmd.sf.net/ruleset/1.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:noNamespaceSchemaLocation="http://pmd.sf.net/ruleset_xml_schema.xsd">

    <description>
        Java coding rules for project.
    </description>

    <!-- <rule ref="rulesets/basic.xml/EmptyCatchBlock"/> -->
    <rule ref="rulesets/basic.xml/EmptyWhileStmt"/>
    <rule ref="rulesets/basic.xml/EmptyTryBlock"/>
    <rule ref="rulesets/basic.xml/EmptyFinallyBlock"/>
    <rule ref="rulesets/basic.xml/EmptySwitchStatements"/>
    <rule ref="rulesets/basic.xml/JumbledIncrementer"/>
    <rule ref="rulesets/basic.xml/ForLoopShouldBeWhileLoop"/>
    <rule ref="rulesets/basic.xml/UnnecessaryConversionTemporary"/>
    <rule ref="rulesets/basic.xml/OverrideBothEqualsAndHashcode"/>
    <rule ref="rulesets/basic.xml/DoubleCheckedLocking"/>
    <rule ref="rulesets/basic.xml/ReturnFromFinallyBlock"/>
    <rule ref="rulesets/basic.xml/EmptySynchronizedBlock"/>
    <rule ref="rulesets/basic.xml/UnnecessaryReturn"/>
    <rule ref="rulesets/basic.xml/EmptyStaticInitializer"/>
    <rule ref="rulesets/basic.xml/UnconditionalIfStatement"/>
    <rule ref="rulesets/basic.xml/EmptyStatementNotInLoop"/>
    <rule ref="rulesets/basic.xml/BooleanInstantiation"/>
    <!-- <rule ref="rulesets/basic.xml/UnnecessaryFinalModifier"/> -->
    <rule ref="rulesets/basic.xml/UselessOverridingMethod"/>
    <rule ref="rulesets/basic.xml/ClassCastExceptionWithToArray"/>
    <rule ref="rulesets/basic.xml/AvoidDecimalLiteralsInBigDecimalConstructor"/>
    <rule ref="rulesets/basic.xml/UselessOperationOnImmutable"/>
    <rule ref="rulesets/basic.xml/MisplacedNullCheck"/>
    <rule ref="rulesets/basic.xml/UnusedNullCheckInEquals"/>
    <rule ref="rulesets/basic.xml/AvoidThreadGroup"/>
    <rule ref="rulesets/basic.xml/BrokenNullCheck"/>
    <rule ref="rulesets/basic.xml/BigIntegerInstantiation"/>
    <rule ref="rulesets/basic.xml/AvoidUsingOctalValues"/>
    <rule ref="rulesets/basic.xml/AvoidUsingHardCodedIP"/>
    <rule ref="rulesets/basic.xml/CheckResultSet"/>
    <rule ref="rulesets/basic.xml/AvoidMultipleUnaryOperators"/>
    <rule ref="rulesets/basic.xml/EmptyInitializer"/>
    <rule ref="rulesets/braces.xml/IfStmtsMustUseBraces"/>
    <rule ref="rulesets/braces.xml/WhileLoopsMustUseBraces"/>
    <rule ref="rulesets/braces.xml/IfElseStmtsMustUseBraces"/>
    <rule ref="rulesets/braces.xml/ForLoopsMustUseBraces"/>
    <rule ref="rulesets/clone.xml/ProperCloneImplementation"/>
    <rule ref="rulesets/clone.xml/CloneThrowsCloneNotSupportedException"/>
    <rule ref="rulesets/clone.xml/CloneMethodMustImplementCloneable"/>
    <!-- <rule ref="rulesets/controversial.xml/UnnecessaryConstructor"/> -->
    <rule ref="rulesets/controversial.xml/AssignmentInOperand"/>
    <rule ref="rulesets/controversial.xml/DontImportSun"/>
    <rule ref="rulesets/controversial.xml/SuspiciousOctalEscape"/>
    <rule ref="rulesets/controversial.xml/CallSuperInConstructor"/>
    <rule ref="rulesets/controversial.xml/AvoidUsingVolatile"/>
    <rule ref="rulesets/controversial.xml/AvoidUsingNativeCode"/>
    <rule ref="rulesets/controversial.xml/AvoidAccessibilityAlteration"/>
    <rule ref="rulesets/controversial.xml/DoNotCallGarbageCollectionExplicitly"/>
    <rules ref="rulesets/coupling.xml/LooseCoupling"/>
    <rules ref="rulesets/designrules.xml/SimplifyBooleanExpressions"/>
    <rules ref="rulesets/designrules.xml/SwitchStmtsShouldHaveDefault"/>
    <rules ref="rulesets/designrules.xml/AvoidReassigningParameters"/>
    <rules ref="rulesets/designrules.xml/ConstructorCallsOverridableMethod"/>
    <rules ref="rulesets/designrules.xml/FinalFieldCouldBeStatic"/>
    <rules ref="rulesets/designrules.xml/CloseResource"/>
    <rules ref="rulesets/designrules.xml/NonStaticInitializer"/>
    <rules ref="rulesets/designrules.xml/DefaultLabelNotLastInSwitchStmt"/>
    <rules ref="rulesets/designrules.xml/NonCaseLabelInSwitchStatement"/>
    <rules ref="rulesets/designrules.xml/OptimizableToArrayCall"/>
    <rules ref="rulesets/designrules.xml/BadComparison"/>
    <rules ref="rulesets/designrules.xml/EqualsNull"/>
    <rules ref="rulesets/designrules.xml/ConfusingTernary"/>
    <rules ref="rulesets/designrules.xml/InstantiationToGetClass"/>
    <rules ref="rulesets/designrules.xml/IdempotentOperations"/>
    <rules ref="rulesets/designrules.xml/SimpleDateFormatNeedsLocale"/>
    <rules ref="rulesets/designrules.xml/UseLocaleWithCaseConversions"/>
    <rules ref="rulesets/designrules.xml/AvoidProtectedFieldInFinalClass"/>
    <rules ref="rulesets/designrules.xml/AvoidSynchronizedAtMethodLevel"/>
    <rules ref="rulesets/designrules.xml/MissingBreakInSwitch"/>
    <rules ref="rulesets/designrules.xml/UseNotifyAllInsteadOfNotify"/>
    <rules ref="rulesets/designrules.xml/AvoidInstanceofChecksInCatchClause"/>
    <rules ref="rulesets/designrules.xml/AbstractClassWithoutAbstractMethod"/>
    <rules ref="rulesets/designrules.xml/SimplifyConditional"/>
    <rules ref="rulesets/designrules.xml/CompareObjectsWithEquals"/>
    <rules ref="rulesets/designrules.xml/PositionLiteralsFirstInComparisons"/>
    <rules ref="rulesets/designrules.xml/UnnecessaryLocalBeforeReturn"/>
    <rules ref="rulesets/designrules.xml/NonThreadSafeSingleton"/>
    <rules ref="rulesets/designrules.xml/UncommentedEmptyMethod"/>
    <rules ref="rulesets/designrules.xml/UncommentedEmptyConstructor"/>
    <rules ref="rulesets/designrules.xml/UnsynchronizedStaticDateFormatter"/>
    <rules ref="rulesets/designrules.xml/PreserveStackTrace"/>
    <rules ref="rulesets/designrules.xml/UseCollectionIsEmpty"/>
    <rules ref="rulesets/designrules.xml/ClassWithOnlyPrivateConstructorsShouldBeFinal"/>
    <rules ref="rulesets/designrules.xml/EmptyMethodInAbstractClassShouldBeAbstract"/>
    <rules ref="rulesets/designrules.xml/ReturnEmptyArrayRatherThanNull"/>
    <rules ref="rulesets/designrules.xml/AbstractClassWithoutAnyMethod"/>
    <rules ref="rulesets/finalizer.xml/EmptyFinalizer"/>
    <rules ref="rulesets/finalizer.xml/FinalizeOnlyCallsSuperFinalize"/>
    <rules ref="rulesets/finalizer.xml/FinalizeOverloaded"/>
    <rules ref="rulesets/finalizer.xml/FinalizeDoesNotCallSuperFinalize"/>
    <rules ref="rulesets/finalizer.xml/FinalizeShouldBeProtected"/>
    <rules ref="rulesets/finalizer.xml/AvoidCallingFinalize"/>
    <rules ref="rulesets/imports.xml/DuplicateImports"/>
    <rules ref="rulesets/imports.xml/DontImportJavaLang"/>
    <rules ref="rulesets/imports.xml/UnusedImports"/>
    <rules ref="rulesets/imports.xml/ImportFromSamePackage"/>
    <rules ref="rulesets/logging-java.xml/MoreThanOneLogger"/>
    <rules ref="rulesets/logging-java.xml/LoggerIsNotStaticFinal"/>
    <rules ref="rulesets/logging-java.xml/SystemPrintln"/>
    <rules ref="rulesets/logging-java.xml/AvoidPrintStackTrace"/>
    <rules ref="rulesets/naming.xml/VariableNamingConventions"/>
    <rules ref="rulesets/naming.xml/MethodNamingConventions"/>
    <rules ref="rulesets/naming.xml/ClassNamingConventions"/>
    <rules ref="rulesets/naming.xml/AbstractNaming"/>
    <rules ref="rulesets/naming.xml/AvoidDollarSigns"/>
    <rules ref="rulesets/naming.xml/MethodWithSameNameAsEnclosingClass"/>
    <rules ref="rulesets/naming.xml/SuspiciousHashcodeMethodName"/>
    <rules ref="rulesets/naming.xml/SuspiciousConstantFieldName"/>
    <rules ref="rulesets/naming.xml/SuspiciousEqualsMethodName"/>
    <rules ref="rulesets/naming.xml/AvoidFieldNameMatchingTypeName"/>
    <rules ref="rulesets/naming.xml/AvoidFieldNameMatchingMethodName"/>
    <rules ref="rulesets/naming.xml/NoPackage"/>
    <rules ref="rulesets/naming.xml/PackageCase"/>
    <rules ref="rulesets/naming.xml/BooleanGetMethodName"/>
    <rules ref="rulesets/optimizations.xml/LocalVariableCouldBeFinal"/>
    <rules ref="rulesets/optimizations.xml/UseArrayListInsteadOfVector"/>
    <rules ref="rulesets/optimizations.xml/SimplifyStartsWith"/>
    <rules ref="rulesets/optimizations.xml/UseStringBufferForStringAppends"/>
    <rules ref="rulesets/optimizations.xml/UseArraysAsList"/>
    <rules ref="rulesets/optimizations.xml/AvoidArrayLoops"/>
    <rules ref="rulesets/optimizations.xml/UnnecessaryWrapperObjectCreation"/>
    <rules ref="rulesets/optimizations.xml/AddEmptyString"/>
    <rules ref="rulesets/strictexception.xml/AvoidCatchingThrowable"/>
    <rules ref="rulesets/strictexception.xml/SignatureDeclareThrowsException"/>
    <rules ref="rulesets/strictexception.xml/ExceptionAsFlowControl"/>
    <rules ref="rulesets/strictexception.xml/AvoidCatchingNPE"/>
    <rules ref="rulesets/strictexception.xml/AvoidThrowingRawExceptionTypes"/>
    <rules ref="rulesets/strictexception.xml/AvoidThrowingNullPointerException"/>
    <rules ref="rulesets/strictexception.xml/AvoidRethrowingException"/>
    <rules ref="rulesets/strictexception.xml/DoNotExtendJavaLangError"/>
    <rules ref="rulesets/strictexception.xml/DoNotThrowExceptionInFinally"/>
    <rules ref="rulesets/strictexception.xml/AvoidThrowingNewInstanceOfSameException"/>
    <rules ref="rulesets/strictexception.xml/AvoidCatchingGenericException"/>
    <rules ref="rulesets/strictexception.xml/AvoidLosingExceptionInformation"/>
    <rules ref="rulesets/strings.xml/StringInstantiation"/>
    <rules ref="rulesets/strings.xml/StringToString"/>
    <rules ref="rulesets/strings.xml/InefficientStringBuffering"/>
    <rules ref="rulesets/strings.xml/UnnecessaryCaseChange"/>
    <rules ref="rulesets/strings.xml/UseStringBufferLength"/>
    <rules ref="rulesets/strings.xml/AppendCharacterWithChar"/>
    <rules ref="rulesets/strings.xml/ConsecutiveLiteralAppends"/>
    <rules ref="rulesets/strings.xml/UseIndexOfChar"/>
    <rules ref="rulesets/strings.xml/InefficientEmptyStringCheck"/>
    <rules ref="rulesets/strings.xml/InsufficientStringBufferDeclaration"/>
    <rules ref="rulesets/strings.xml/UselessStringValueOf"/>
    <rules ref="rulesets/strings.xml/StringBufferInstantiationWithChar"/>
    <rules ref="rulesets/strings.xml/UseEqualsToCompareStrings"/>
    <rules ref="rulesets/strings.xml/AvoidStringBufferField"/>
</ruleset>
